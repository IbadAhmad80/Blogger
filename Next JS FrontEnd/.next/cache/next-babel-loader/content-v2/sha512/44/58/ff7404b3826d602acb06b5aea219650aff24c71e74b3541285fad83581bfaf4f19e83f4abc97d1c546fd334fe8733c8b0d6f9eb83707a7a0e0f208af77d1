{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nexport default function Map({\n  locations\n}) {\n  console.log(PUBLIC_NEXT_MPBOX_SECRET_KEY);\n  const {\n    0: viewport,\n    1: setViewport\n  } = useState({\n    width: \"87%\",\n    height: \"100%\",\n    // The latitude and longitude of the center of London\n    latitude: 51.5074,\n    longitude: -0.1278,\n    // latitude: 31.582045,\n    // longitude: 74.329376,\n    zoom: 10\n  });\n  const {\n    0: selectLocation,\n    1: setSelectedLocation\n  } = useState({});\n  const access_token = \"pk.eyJ1IjoiaWJhZGFobWFkIiwiYSI6ImNra3JzNWt2ajBsOXQyb282YTkzNHZic2cifQ.Axi1cRU6bZqpLkvlduR9Cg\";\n  return /*#__PURE__*/_jsx(ReactMapGL, _objectSpread(_objectSpread({\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    mapboxApiAccessToken: access_token\n  }, viewport), {}, {\n    onViewportChange: nextViewport => setViewport(nextViewport),\n    children: locations.map(location => /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(Marker, {\n        latitude: location.center[1],\n        longitude: location.center[0],\n        children: /*#__PURE__*/_jsx(\"a\", {\n          onClick: () => {\n            setSelectedLocation(location);\n          },\n          children: /*#__PURE__*/_jsx(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"push-pin\",\n            children: \"\\uD83D\\uDCCC\"\n          })\n        })\n      }), selectLocation.id === location.id ? /*#__PURE__*/_jsx(Popup, {\n        onClose: () => setSelectedLocation({}),\n        closeOnClick: true,\n        latitude: location.center[1],\n        longitude: location.center[0],\n        children: location.place_name\n      }) : false]\n    }, location.id))\n  }));\n} // import React, { useState, useEffect } from \"react\";\n// import { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n// import Styles from \"../../styles/Contact.module.scss\";\n// const mapStyles = {\n//   width: \"80%\",\n//   height: \"100%\",\n// };\n// function GoogleMap() {\n//   const [userLocation, setLocation] = useState({\n//     longituide: \"\",\n//     latituide: \"\",\n//   });\n//   useEffect(() => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.watchPosition(function (position) {\n//         console.log(\"Latitude is :\", position.coords.latitude);\n//         console.log(\"Longitude is :\", position.coords.longitude);\n//         setLocation({\n//           longituide: position.coords.longitude,\n//           latituide: position.coords.latituide,\n//         });\n//       });\n//     }\n//   }, []);\n//   return (\n//     <div>\n//       <div>\n//         <Map\n//           google={google}\n//           zoom={14}\n//           style={mapStyles}\n//           initialCenter={{\n//             lat: userLocation.latituide,\n//             lng: userLocation.longitude,\n//           }}\n//         >\n//           <Marker name={\"This is test name\"} />\n//         </Map>\n//       </div>\n//     </div>\n//   );\n// }\n// export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyDOTuZWLNaP930IeXGDMRghAoDpBBnddY8\",\n// })(GoogleMap);","map":null,"metadata":{},"sourceType":"module"}