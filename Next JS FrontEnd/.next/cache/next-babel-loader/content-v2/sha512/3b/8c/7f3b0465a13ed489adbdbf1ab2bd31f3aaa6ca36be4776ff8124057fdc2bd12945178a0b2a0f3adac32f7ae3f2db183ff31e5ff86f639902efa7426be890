{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\create_post.js\";\nimport React from \"react\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { server } from \"../config/index\";\nimport * as cookie from \"cookie\";\nexport default function CreatePost({\n  user\n}) {\n  const {\n    id,\n    role\n  } = user;\n\n  const becomeAuthorize = async () => {\n    let role_id;\n    const roles = await axios.get(`${server}/users-permissions/roles`);\n    roles.data.roles.map(role => {\n      role.name === \"Authenticated\" ? role_id = role.id : \"\";\n    });\n    const updatedRole = {\n      role: {\n        _id: `${role_id}`,\n        id: `${role_id}`\n      }\n    };\n    console.log(\"updatedRole\", JSON.stringify(updatedRole));\n    axios.put(`${server}/users/${id}`, updatedRole);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), role ? role.name === \"Public\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: becomeAuthorize,\n      children: \"Become Authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"You are already authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this) : \"\"]\n  }, void 0, true);\n}\nexport const getServerSideProps = async context => {\n  const parsedCookie = context.req.headers.cookie && cookie.parse(context.req.headers.cookie);\n  let user = parsedCookie && parsedCookie.token && (await axios.get(`${server}/users/me`, {\n    headers: {\n      Authorization: `Bearer ${parsedCookie.token}`\n    }\n  }));\n  return {\n    props: {\n      user: parsedCookie ? user.data : \"\"\n    }\n  };\n};","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/create_post.js"],"names":["React","Cookie","axios","server","cookie","CreatePost","user","id","role","becomeAuthorize","role_id","roles","get","data","map","name","updatedRole","_id","console","log","JSON","stringify","put","getServerSideProps","context","parsedCookie","req","headers","parse","token","Authorization","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA8B;AAC3C,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAeF,IAArB;;AACA,QAAMG,eAAe,GAAG,YAAY;AAClC,QAAIC,OAAJ;AACA,UAAMC,KAAK,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,MAAO,0BAApB,CAApB;AACAQ,IAAAA,KAAK,CAACE,IAAN,CAAWF,KAAX,CAAiBG,GAAjB,CAAsBN,IAAD,IAAU;AAC7BA,MAAAA,IAAI,CAACO,IAAL,KAAc,eAAd,GAAiCL,OAAO,GAAGF,IAAI,CAACD,EAAhD,GAAsD,EAAtD;AACD,KAFD;AAIA,UAAMS,WAAW,GAAG;AAClBR,MAAAA,IAAI,EAAE;AACJS,QAAAA,GAAG,EAAG,GAAEP,OAAQ,EADZ;AAEJH,QAAAA,EAAE,EAAG,GAAEG,OAAQ;AAFX;AADY,KAApB;AAMAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAA3B;AACAd,IAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEnB,MAAO,UAASI,EAAG,EAAhC,EAAmCS,WAAnC;AACD,GAfD;;AAgBA,sBACE;AAAA,4BACE;AAAA,gBACGf,MAAM,CAACW,GAAP,CAAW,OAAX,IAAsB,2BAAtB,GAAoD;AADvD;AAAA;AAAA;AAAA;AAAA,YADF,EAIGJ,IAAI,GACHA,IAAI,CAACO,IAAL,KAAc,QAAd,gBACE;AAAQ,MAAA,OAAO,EAAEN,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJC,GAOH,EAXJ;AAAA,kBADF;AAgBD;AAED,OAAO,MAAMc,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AACnD,QAAMC,YAAY,GAChBD,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBvB,MAApB,IAA8BA,MAAM,CAACwB,KAAP,CAAaJ,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBvB,MAAjC,CADhC;AAGA,MAAIE,IAAI,GACNmB,YAAY,IACZA,YAAY,CAACI,KADb,KAEC,MAAM3B,KAAK,CAACU,GAAN,CAAW,GAAET,MAAO,WAApB,EAAgC;AACrCwB,IAAAA,OAAO,EAAE;AACPG,MAAAA,aAAa,EAAG,UAASL,YAAY,CAACI,KAAM;AADrC;AAD4B,GAAhC,CAFP,CADF;AAQA,SAAO;AACLE,IAAAA,KAAK,EAAE;AACLzB,MAAAA,IAAI,EAAEmB,YAAY,GAAGnB,IAAI,CAACO,IAAR,GAAe;AAD5B;AADF,GAAP;AAKD,CAjBM","sourcesContent":["import React from \"react\";\r\nimport Cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../config/index\";\r\nimport * as cookie from \"cookie\";\r\n\r\nexport default function CreatePost({ user }) {\r\n  const { id, role } = user;\r\n  const becomeAuthorize = async () => {\r\n    let role_id;\r\n    const roles = await axios.get(`${server}/users-permissions/roles`);\r\n    roles.data.roles.map((role) => {\r\n      role.name === \"Authenticated\" ? (role_id = role.id) : \"\";\r\n    });\r\n\r\n    const updatedRole = {\r\n      role: {\r\n        _id: `${role_id}`,\r\n        id: `${role_id}`,\r\n      },\r\n    };\r\n    console.log(\"updatedRole\", JSON.stringify(updatedRole));\r\n    axios.put(`${server}/users/${id}`, updatedRole);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        {Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"}\r\n      </div>\r\n      {role ? (\r\n        role.name === \"Public\" ? (\r\n          <button onClick={becomeAuthorize}>Become Authorize</button>\r\n        ) : (\r\n          <h5>You are already authorize</h5>\r\n        )\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = async (context) => {\r\n  const parsedCookie =\r\n    context.req.headers.cookie && cookie.parse(context.req.headers.cookie);\r\n\r\n  let user =\r\n    parsedCookie &&\r\n    parsedCookie.token &&\r\n    (await axios.get(`${server}/users/me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${parsedCookie.token}`,\r\n      },\r\n    }));\r\n  return {\r\n    props: {\r\n      user: parsedCookie ? user.data : \"\",\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}