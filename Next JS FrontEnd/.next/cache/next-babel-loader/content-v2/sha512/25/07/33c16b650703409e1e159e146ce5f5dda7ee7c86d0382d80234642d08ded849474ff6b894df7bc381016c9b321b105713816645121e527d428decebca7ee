{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\posts\\\\[id].js\";\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { server } from \"../../config/index\";\nexport default function SinlgePost({\n  allBlogs,\n  blog,\n  author\n}) {\n  const router = useRouter;\n  const {\n    0: queryData,\n    1: setQueryData\n  } = useState({\n    blog: blog,\n    sameAuthor: author,\n    allBlogs: allBlogs\n  });\n  console.log(queryData, router().query.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\nexport const getStaticProps = async context => {\n  const res = await fetch(`${server}/posts/`);\n  console.log(\"context was\", context);\n  const allBlogs = await res.json();\n  let blog = allBlogs.filter(blog => blog.id === context.params.id);\n  let author = allBlogs.filter(article => article.author === blog.author);\n  return {\n    revalidate: 5,\n    props: {\n      allBlogs,\n      blog,\n      author\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const res = await fetch(`${server}/posts/`);\n  const allBlogs = await res.json();\n  const ids = allBlogs.map(blog => blog.id);\n  const paths = ids.map(id => ({\n    params: {\n      id: id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/posts/[id].js"],"names":["React","useState","useRouter","server","SinlgePost","allBlogs","blog","author","router","queryData","setQueryData","sameAuthor","console","log","query","id","getStaticProps","context","res","fetch","json","filter","params","article","revalidate","props","getStaticPaths","ids","map","paths","toString","fallback"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAApB,EAAgD;AAC7D,QAAMC,MAAM,GAAGN,SAAf;AACA,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC;AACzCK,IAAAA,IAAI,EAAEA,IADmC;AAEzCK,IAAAA,UAAU,EAAEJ,MAF6B;AAGzCF,IAAAA,QAAQ,EAAEA;AAH+B,GAAD,CAA1C;AAMAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBD,MAAM,GAAGM,KAAT,CAAeC,EAAtC;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEhB,MAAO,SAAX,CAAvB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,OAA3B;AACA,QAAMZ,QAAQ,GAAG,MAAMa,GAAG,CAACE,IAAJ,EAAvB;AACA,MAAId,IAAI,GAAGD,QAAQ,CAACgB,MAAT,CAAiBf,IAAD,IAAUA,IAAI,CAACS,EAAL,KAAYE,OAAO,CAACK,MAAR,CAAeP,EAArD,CAAX;AACA,MAAIR,MAAM,GAAGF,QAAQ,CAACgB,MAAT,CAAiBE,OAAD,IAAaA,OAAO,CAAChB,MAAR,KAAmBD,IAAI,CAACC,MAArD,CAAb;AAEA,SAAO;AACLiB,IAAAA,UAAU,EAAE,CADP;AAELC,IAAAA,KAAK,EAAE;AACLpB,MAAAA,QADK;AAELC,MAAAA,IAFK;AAGLC,MAAAA;AAHK;AAFF,GAAP;AAQD,CAfM;AAiBP,OAAO,MAAMmB,cAAc,GAAG,YAAY;AACxC,QAAMR,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEhB,MAAO,SAAX,CAAvB;AACA,QAAME,QAAQ,GAAG,MAAMa,GAAG,CAACE,IAAJ,EAAvB;AACA,QAAMO,GAAG,GAAGtB,QAAQ,CAACuB,GAAT,CAActB,IAAD,IAAUA,IAAI,CAACS,EAA5B,CAAZ;AACA,QAAMc,KAAK,GAAGF,GAAG,CAACC,GAAJ,CAASb,EAAD,KAAS;AAC7BO,IAAAA,MAAM,EAAE;AACNP,MAAAA,EAAE,EAAEA,EAAE,CAACe,QAAH;AADE;AADqB,GAAT,CAAR,CAAd;AAKA,SAAO;AACLD,IAAAA,KADK;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CAbM","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { server } from \"../../config/index\";\r\n\r\nexport default function SinlgePost({ allBlogs, blog, author }) {\r\n  const router = useRouter;\r\n  const [queryData, setQueryData] = useState({\r\n    blog: blog,\r\n    sameAuthor: author,\r\n    allBlogs: allBlogs,\r\n  });\r\n\r\n  console.log(queryData, router().query.id);\r\n  return <div></div>;\r\n}\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const res = await fetch(`${server}/posts/`);\r\n  console.log(\"context was\", context);\r\n  const allBlogs = await res.json();\r\n  let blog = allBlogs.filter((blog) => blog.id === context.params.id);\r\n  let author = allBlogs.filter((article) => article.author === blog.author);\r\n\r\n  return {\r\n    revalidate: 5,\r\n    props: {\r\n      allBlogs,\r\n      blog,\r\n      author,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const res = await fetch(`${server}/posts/`);\r\n  const allBlogs = await res.json();\r\n  const ids = allBlogs.map((blog) => blog.id);\r\n  const paths = ids.map((id) => ({\r\n    params: {\r\n      id: id.toString(),\r\n    },\r\n  }));\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}