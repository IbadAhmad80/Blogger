{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\create_post.js\";\nimport React from \"react\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { server } from \"../config/index\";\nexport default function CreatePost({\n  user\n}) {\n  let role_id; //   console.log(\"role is\", role);\n\n  console.log(\"user id\", user);\n\n  const becomeAuthorize = async () => {\n    const roles = await axios.get(`${server}/users-permissions/roles`);\n    roles.map(role => {\n      role.name === \"Authenticated\";\n      role_id = role.id;\n    });\n    axios.put(`${server}/users/${userId}`, {\n      role: {\n        _id: `${role_id}`,\n        id: `${role_id}`\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nconst getServerSideProps = async () => {\n  let user;\n\n  if (Cookie.get(\"token\")) {// user = await axios.get(`${server}/users/me`, {\n    //   headers: {\n    //     Authorization: `Bearer ${Cookie.get(\"token\")}`,\n    //   },\n    // });\n  }\n\n  return {\n    props: {\n      user\n    }\n  };\n};","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/create_post.js"],"names":["React","Cookie","axios","server","CreatePost","user","role_id","console","log","becomeAuthorize","roles","get","map","role","name","id","put","userId","_id","getServerSideProps","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA8B;AAC3C,MAAIC,OAAJ,CAD2C,CAE3C;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;;AACA,QAAMI,eAAe,GAAG,YAAY;AAClC,UAAMC,KAAK,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,MAAO,0BAApB,CAApB;AACAO,IAAAA,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AAClBA,MAAAA,IAAI,CAACC,IAAL,KAAc,eAAd;AACAR,MAAAA,OAAO,GAAGO,IAAI,CAACE,EAAf;AACD,KAHD;AAIAb,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEb,MAAO,UAASc,MAAO,EAApC,EAAuC;AACrCJ,MAAAA,IAAI,EAAE;AACJK,QAAAA,GAAG,EAAG,GAAEZ,OAAQ,EADZ;AAEJS,QAAAA,EAAE,EAAG,GAAET,OAAQ;AAFX;AAD+B,KAAvC;AAMD,GAZD;;AAaA,sBACE;AAAA,2BACE;AAAA,gBACGL,MAAM,CAACU,GAAP,CAAW,OAAX,IAAsB,2BAAtB,GAAoD;AADvD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD;;AAED,MAAMQ,kBAAkB,GAAG,YAAY;AACrC,MAAId,IAAJ;;AACA,MAAIJ,MAAM,CAACU,GAAP,CAAW,OAAX,CAAJ,EAAyB,CACvB;AACA;AACA;AACA;AACA;AACD;;AACD,SAAO;AACLS,IAAAA,KAAK,EAAE;AACLf,MAAAA;AADK;AADF,GAAP;AAKD,CAdD","sourcesContent":["import React from \"react\";\r\nimport Cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../config/index\";\r\n\r\nexport default function CreatePost({ user }) {\r\n  let role_id;\r\n  //   console.log(\"role is\", role);\r\n  console.log(\"user id\", user);\r\n  const becomeAuthorize = async () => {\r\n    const roles = await axios.get(`${server}/users-permissions/roles`);\r\n    roles.map((role) => {\r\n      role.name === \"Authenticated\";\r\n      role_id = role.id;\r\n    });\r\n    axios.put(`${server}/users/${userId}`, {\r\n      role: {\r\n        _id: `${role_id}`,\r\n        id: `${role_id}`,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        {Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"}\r\n      </div>\r\n      {/* {role && role.name === \"Public\" ? (\r\n        <button onClick={becomeAuthorize}>Become Authorize</button>\r\n      ) : (\r\n        <h5>You are already authorize</h5>\r\n      )} */}\r\n    </>\r\n  );\r\n}\r\n\r\nconst getServerSideProps = async () => {\r\n  let user;\r\n  if (Cookie.get(\"token\")) {\r\n    // user = await axios.get(`${server}/users/me`, {\r\n    //   headers: {\r\n    //     Authorization: `Bearer ${Cookie.get(\"token\")}`,\r\n    //   },\r\n    // });\r\n  }\r\n  return {\r\n    props: {\r\n      user,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}