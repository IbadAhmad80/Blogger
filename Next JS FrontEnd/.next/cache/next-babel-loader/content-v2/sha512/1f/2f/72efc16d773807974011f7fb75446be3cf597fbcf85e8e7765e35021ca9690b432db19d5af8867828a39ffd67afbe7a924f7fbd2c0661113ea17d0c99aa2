{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\components\\\\ContactPage\\\\Map.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nexport default function Map(_ref) {\n  _s();\n\n  var _this = this;\n\n  var locations = _ref.locations;\n\n  var _useState = useState({\n    longituide: 0,\n    latituide: 0\n  }),\n      userLocation = _useState[0],\n      setLocation = _useState[1];\n\n  var _useState2 = useState({\n    width: \"80%\",\n    height: \"100%\",\n    // The latitude and longitude of the center of London\n    latitude: 51.5074,\n    longitude: -0.1278,\n    zoom: 10\n  }),\n      viewport = _useState2[0],\n      setViewport = _useState2[1];\n\n  var _useState3 = useState({}),\n      selectLocation = _useState3[0],\n      setSelectedLocation = _useState3[1];\n\n  useEffect(function () {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(function (position) {\n        setLocation({\n          longituide: position.coords.longitude,\n          latituide: position.coords.latituide\n        });\n      });\n    }\n  }, []);\n  var access_token = \"pk.eyJ1IjoiaWJhZGFobWFkIiwiYSI6ImNra3JzNWt2ajBsOXQyb282YTkzNHZic2cifQ.Axi1cRU6bZqpLkvlduR9Cg\";\n  return /*#__PURE__*/_jsxDEV(ReactMapGL, _objectSpread(_objectSpread({\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    mapboxApiAccessToken: access_token\n  }, viewport), {}, {\n    onViewportChange: function onViewportChange(nextViewport) {\n      return setViewport(nextViewport);\n    },\n    children: locations.map(function (location) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          latitude: location.center[1],\n          longitude: location.center[0],\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: function onClick() {\n              setSelectedLocation(location);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"push-pin\",\n              children: \"\\uD83D\\uDCCC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, _this), selectLocation.id === location.id ? /*#__PURE__*/_jsxDEV(Popup, {\n          onClose: function onClose() {\n            return setSelectedLocation({});\n          },\n          closeOnClick: true,\n          latitude: location.center[1],\n          longitude: location.center[0],\n          children: location.place_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, _this) : false]\n      }, location.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this);\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n} // import React, { useState, useEffect } from \"react\";\n// import { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n// import Styles from \"../../styles/Contact.module.scss\";\n// const mapStyles = {\n//   width: \"80%\",\n//   height: \"100%\",\n// };\n// function GoogleMap() {\n//   const [userLocation, setLocation] = useState({\n//     longituide: \"\",\n//     latituide: \"\",\n//   });\n//   useEffect(() => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.watchPosition(function (position) {\n//         console.log(\"Latitude is :\", position.coords.latitude);\n//         console.log(\"Longitude is :\", position.coords.longitude);\n//         setLocation({\n//           longituide: position.coords.longitude,\n//           latituide: position.coords.latituide,\n//         });\n//       });\n//     }\n//   }, []);\n//   return (\n//     <div>\n//       <div>\n//         <Map\n//           google={google}\n//           zoom={14}\n//           style={mapStyles}\n//           initialCenter={{\n//             lat: userLocation.latituide,\n//             lng: userLocation.longitude,\n//           }}\n//         >\n//           <Marker name={\"This is test name\"} />\n//         </Map>\n//       </div>\n//     </div>\n//   );\n// }\n// export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyDOTuZWLNaP930IeXGDMRghAoDpBBnddY8\",\n// })(GoogleMap);\n\n_s(Map, \"yk+6dI9nYIWmdXdgjrg+sl3PtQs=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/components/ContactPage/Map.js"],"names":["useState","useEffect","ReactMapGL","Marker","Popup","Map","locations","longituide","latituide","userLocation","setLocation","width","height","latitude","longitude","zoom","viewport","setViewport","selectLocation","setSelectedLocation","navigator","geolocation","watchPosition","position","coords","access_token","nextViewport","map","location","center","id","place_name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\n\r\nexport default function Map({ locations }) {\r\n  const [userLocation, setLocation] = useState({\r\n    longituide: 0,\r\n    latituide: 0,\r\n  });\r\n  const [viewport, setViewport] = useState({\r\n    width: \"80%\",\r\n    height: \"100%\",\r\n    // The latitude and longitude of the center of London\r\n    latitude: 51.5074,\r\n    longitude: -0.1278,\r\n\r\n    zoom: 10,\r\n  });\r\n  const [selectLocation, setSelectedLocation] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(function (position) {\r\n        setLocation({\r\n          longituide: position.coords.longitude,\r\n          latituide: position.coords.latituide,\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n  const access_token =\r\n    \"pk.eyJ1IjoiaWJhZGFobWFkIiwiYSI6ImNra3JzNWt2ajBsOXQyb282YTkzNHZic2cifQ.Axi1cRU6bZqpLkvlduR9Cg\";\r\n\r\n  return (\r\n    <ReactMapGL\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      mapboxApiAccessToken={access_token}\r\n      {...viewport}\r\n      onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n    >\r\n      {locations.map((location) => (\r\n        <div key={location.id}>\r\n          <Marker latitude={location.center[1]} longitude={location.center[0]}>\r\n            <a\r\n              onClick={() => {\r\n                setSelectedLocation(location);\r\n              }}\r\n            >\r\n              <span role=\"img\" aria-label=\"push-pin\">\r\n                📌\r\n              </span>\r\n            </a>\r\n          </Marker>\r\n          {selectLocation.id === location.id ? (\r\n            <Popup\r\n              onClose={() => setSelectedLocation({})}\r\n              closeOnClick={true}\r\n              latitude={location.center[1]}\r\n              longitude={location.center[0]}\r\n            >\r\n              {location.place_name}\r\n            </Popup>\r\n          ) : (\r\n            false\r\n          )}\r\n        </div>\r\n      ))}\r\n    </ReactMapGL>\r\n  );\r\n}\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\n// import Styles from \"../../styles/Contact.module.scss\";\r\n\r\n// const mapStyles = {\r\n//   width: \"80%\",\r\n//   height: \"100%\",\r\n// };\r\n\r\n// function GoogleMap() {\r\n//   const [userLocation, setLocation] = useState({\r\n//     longituide: \"\",\r\n//     latituide: \"\",\r\n//   });\r\n//   useEffect(() => {\r\n//     if (navigator.geolocation) {\r\n//       navigator.geolocation.watchPosition(function (position) {\r\n//         console.log(\"Latitude is :\", position.coords.latitude);\r\n//         console.log(\"Longitude is :\", position.coords.longitude);\r\n//         setLocation({\r\n//           longituide: position.coords.longitude,\r\n//           latituide: position.coords.latituide,\r\n//         });\r\n//       });\r\n//     }\r\n//   }, []);\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Map\r\n//           google={google}\r\n//           zoom={14}\r\n//           style={mapStyles}\r\n//           initialCenter={{\r\n//             lat: userLocation.latituide,\r\n//             lng: userLocation.longitude,\r\n//           }}\r\n//         >\r\n//           <Marker name={\"This is test name\"} />\r\n//         </Map>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default GoogleApiWrapper({\r\n//   apiKey: \"AIzaSyDOTuZWLNaP930IeXGDMRghAoDpBBnddY8\",\r\n// })(GoogleMap);\r\n"]},"metadata":{},"sourceType":"module"}