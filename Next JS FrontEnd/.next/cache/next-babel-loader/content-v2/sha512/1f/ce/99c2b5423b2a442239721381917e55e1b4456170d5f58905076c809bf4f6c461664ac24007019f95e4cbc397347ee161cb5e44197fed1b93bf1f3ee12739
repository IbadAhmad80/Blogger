{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\create_post.js\";\nimport React from \"react\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { server } from \"../config/index\";\nexport var __N_SSP = true;\nexport default function CreatePost(_ref) {\n  var user = _ref.user,\n      role = _ref.role;\n  console.log(\"role is\", role);\n  console.log(\"user id\", user);\n\n  var becomeAuthorize = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var role_id, roles;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(server, \"/users-permissions/roles\"));\n\n            case 2:\n              roles = _context.sent;\n              roles.map(function (role) {\n                role.name === \"Authenticated\";\n                role_id = role.id;\n              });\n              axios.put(\"\".concat(server, \"/users/\").concat(user), {\n                role: {\n                  _id: \"\".concat(role_id),\n                  id: \"\".concat(role_id)\n                }\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function becomeAuthorize() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), role && role.name === \"Public\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: becomeAuthorize,\n      children: \"Become Authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"You are already authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/create_post.js"],"names":["React","Cookie","axios","server","CreatePost","user","role","console","log","becomeAuthorize","get","roles","map","name","role_id","id","put","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,eAAe,SAASC,UAAT,OAAoC;AAAA,MAAdC,IAAc,QAAdA,IAAc;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;;AACA,MAAMI,eAAe;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEFP,KAAK,CAACQ,GAAN,WAAaP,MAAb,8BAFE;;AAAA;AAEhBQ,cAAAA,KAFgB;AAGtBA,cAAAA,KAAK,CAACC,GAAN,CAAU,UAACN,IAAD,EAAU;AAClBA,gBAAAA,IAAI,CAACO,IAAL,KAAc,eAAd;AACAC,gBAAAA,OAAO,GAAGR,IAAI,CAACS,EAAf;AACD,eAHD;AAIAb,cAAAA,KAAK,CAACc,GAAN,WAAab,MAAb,oBAA6BE,IAA7B,GAAqC;AACnCC,gBAAAA,IAAI,EAAE;AACJW,kBAAAA,GAAG,YAAKH,OAAL,CADC;AAEJC,kBAAAA,EAAE,YAAKD,OAAL;AAFE;AAD6B,eAArC;;AAPsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfL,eAAe;AAAA;AAAA;AAAA,KAArB;;AAcA,sBACE;AAAA,4BACE;AAAA,gBACGR,MAAM,CAACS,GAAP,CAAW,OAAX,IAAsB,2BAAtB,GAAoD;AADvD;AAAA;AAAA;AAAA;AAAA,YADF,EAIGJ,IAAI,IAAIA,IAAI,CAACO,IAAL,KAAc,QAAtB,gBACC;AAAQ,MAAA,OAAO,EAAEJ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAYD;KA7BuBL,U","sourcesContent":["import React from \"react\";\r\nimport Cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../config/index\";\r\n\r\nexport default function CreatePost({ user, role }) {\r\n  console.log(\"role is\", role);\r\n  console.log(\"user id\", user);\r\n  const becomeAuthorize = async () => {\r\n    let role_id;\r\n    const roles = await axios.get(`${server}/users-permissions/roles`);\r\n    roles.map((role) => {\r\n      role.name === \"Authenticated\";\r\n      role_id = role.id;\r\n    });\r\n    axios.put(`${server}/users/${user}`, {\r\n      role: {\r\n        _id: `${role_id}`,\r\n        id: `${role_id}`,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        {Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"}\r\n      </div>\r\n      {role && role.name === \"Public\" ? (\r\n        <button onClick={becomeAuthorize}>Become Authorize</button>\r\n      ) : (\r\n        <h5>You are already authorize</h5>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = async () => {\r\n  console.log(\"hi, in getserversideprops\");\r\n  // let id, role;\r\n  let user;\r\n  if (Cookie.get(\"token\")) {\r\n    user = await axios.get(`${server}/users/me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookie.get(\"token\")}`,\r\n      },\r\n    });\r\n    // id = user.id;\r\n    // role = user.role;\r\n  }\r\n  return {\r\n    props: {\r\n      user,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}