{"ast":null,"code":"import Stripe from \"stripe\";\nimport axios from \"axios\";\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  apiVersion: \"2020-03-02\"\n});\nexport default (async (req, res) => {\n  const {\n    quantity,\n    user\n  } = req.body;\n  const session = await stripe.checkout.sessions.create({\n    payment_method_types: [\"card\"],\n    line_items: [{\n      price: process.env.PRICE_ID,\n      quantity\n    }],\n    mode: \"payment\",\n    success_url: `${req.headers.origin}/result?session_id={CHECKOUT_SESSION_ID}`,\n    cancel_url: `${req.headers.origin}/checkout`\n  });\n  const {\n    id,\n    role\n  } = user;\n  let role_id;\n  const roles = await axios.get(`${server}/users-permissions/roles`);\n  roles.data.roles.map(role => {\n    role.name === \"Authenticated\" ? role_id = role.id : \"\";\n  });\n  const updatedRole = {\n    role: {\n      _id: `${role_id}`,\n      id: `${role_id}`\n    }\n  };\n  axios.put(`${server}/users/${id}`, updatedRole);\n  console.log(\"session id is \", session.id);\n  res.status(200).json({\n    sessionId: session.id\n  });\n});","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/api/checkout/sessions.js"],"names":["Stripe","axios","stripe","process","env","STRIPE_SECRET_KEY","apiVersion","req","res","quantity","user","body","session","checkout","sessions","create","payment_method_types","line_items","price","PRICE_ID","mode","success_url","headers","origin","cancel_url","id","role","role_id","roles","get","server","data","map","name","updatedRole","_id","put","console","log","status","json","sessionId"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAWG,OAAO,CAACC,GAAR,CAAYC,iBAAvB,EAA0C;AACvDC,EAAAA,UAAU,EAAE;AAD2C,CAA1C,CAAf;AAIA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBH,GAAG,CAACI,IAA/B;AACA,QAAMC,OAAO,GAAG,MAAMV,MAAM,CAACW,QAAP,CAAgBC,QAAhB,CAAyBC,MAAzB,CAAgC;AACpDC,IAAAA,oBAAoB,EAAE,CAAC,MAAD,CAD8B;AAEpDC,IAAAA,UAAU,EAAE,CACV;AACEC,MAAAA,KAAK,EAAEf,OAAO,CAACC,GAAR,CAAYe,QADrB;AAEEV,MAAAA;AAFF,KADU,CAFwC;AAQpDW,IAAAA,IAAI,EAAE,SAR8C;AASpDC,IAAAA,WAAW,EAAG,GAAEd,GAAG,CAACe,OAAJ,CAAYC,MAAO,0CATiB;AAUpDC,IAAAA,UAAU,EAAG,GAAEjB,GAAG,CAACe,OAAJ,CAAYC,MAAO;AAVkB,GAAhC,CAAtB;AAYA,QAAM;AAAEE,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAehB,IAArB;AACA,MAAIiB,OAAJ;AACA,QAAMC,KAAK,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CAAW,GAAEC,MAAO,0BAApB,CAApB;AACAF,EAAAA,KAAK,CAACG,IAAN,CAAWH,KAAX,CAAiBI,GAAjB,CAAsBN,IAAD,IAAU;AAC7BA,IAAAA,IAAI,CAACO,IAAL,KAAc,eAAd,GAAiCN,OAAO,GAAGD,IAAI,CAACD,EAAhD,GAAsD,EAAtD;AACD,GAFD;AAIA,QAAMS,WAAW,GAAG;AAClBR,IAAAA,IAAI,EAAE;AACJS,MAAAA,GAAG,EAAG,GAAER,OAAQ,EADZ;AAEJF,MAAAA,EAAE,EAAG,GAAEE,OAAQ;AAFX;AADY,GAApB;AAMA1B,EAAAA,KAAK,CAACmC,GAAN,CAAW,GAAEN,MAAO,UAASL,EAAG,EAAhC,EAAmCS,WAAnC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B1B,OAAO,CAACa,EAAtC;AAEAjB,EAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,SAAS,EAAE7B,OAAO,CAACa;AAArB,GAArB;AACD,CA/BD","sourcesContent":["import Stripe from \"stripe\";\r\nimport axios from \"axios\";\r\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\r\n  apiVersion: \"2020-03-02\",\r\n});\r\n\r\nexport default async (req, res) => {\r\n  const { quantity, user } = req.body;\r\n  const session = await stripe.checkout.sessions.create({\r\n    payment_method_types: [\"card\"],\r\n    line_items: [\r\n      {\r\n        price: process.env.PRICE_ID,\r\n        quantity,\r\n      },\r\n    ],\r\n    mode: \"payment\",\r\n    success_url: `${req.headers.origin}/result?session_id={CHECKOUT_SESSION_ID}`,\r\n    cancel_url: `${req.headers.origin}/checkout`,\r\n  });\r\n  const { id, role } = user;\r\n  let role_id;\r\n  const roles = await axios.get(`${server}/users-permissions/roles`);\r\n  roles.data.roles.map((role) => {\r\n    role.name === \"Authenticated\" ? (role_id = role.id) : \"\";\r\n  });\r\n\r\n  const updatedRole = {\r\n    role: {\r\n      _id: `${role_id}`,\r\n      id: `${role_id}`,\r\n    },\r\n  };\r\n  axios.put(`${server}/users/${id}`, updatedRole);\r\n  console.log(\"session id is \", session.id);\r\n\r\n  res.status(200).json({ sessionId: session.id });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}