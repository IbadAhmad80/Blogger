{"ast":null,"code":"import Stripe from \"stripe\";\nimport axios from \"axios\";\nimport { server } from \"../../../config/index\";\nimport * as cookie from \"cookie\"; // import Cookie from \"js-cookie\";\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  apiVersion: \"2020-03-02\"\n});\nexport default (async (req, res) => {\n  const {\n    id\n  } = req.query;\n  const session = await stripe.checkout.sessions.retrieve(id, {\n    expand: [\"payment_intent\"]\n  });\n  const parsedCookie = context.req.headers.cookie && cookie.parse(context.req.headers.cookie); // let user =\n  //   parsedCookie &&\n  //   parsedCookie.token &&\n  //   (await axios.get(`${server}/users/me`, {\n  //     headers: {\n  //       Authorization: `Bearer ${parsedCookie.token}`,\n  //     },\n  //   }));\n  // const { id } = user;\n  // let role_id;\n  // const roles = await axios.get(`${server}/users-permissions/roles`);\n  // roles.data.roles.map((role) => {\n  //   role.name === \"Authenticated\" ? (role_id = role.id) : \"\";\n  // });\n  // const updatedRole = {\n  //   role: {\n  //     _id: `${role_id}`,\n  //     id: `${role_id}`,\n  //   },\n  // };\n  // axios.put(`${server}/users/${id}`, updatedRole);\n\n  res.status(200).json({\n    session\n  });\n});","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/api/checkout/[id].js"],"names":["Stripe","axios","server","cookie","stripe","process","env","STRIPE_SECRET_KEY","apiVersion","req","res","id","query","session","checkout","sessions","retrieve","expand","parsedCookie","context","headers","parse","status","json"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB,C,CACA;;AACA,MAAMC,MAAM,GAAG,IAAIJ,MAAJ,CAAWK,OAAO,CAACC,GAAR,CAAYC,iBAAvB,EAA0C;AACvDC,EAAAA,UAAU,EAAE;AAD2C,CAA1C,CAAf;AAIA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAASF,GAAG,CAACG,KAAnB;AACA,QAAMC,OAAO,GAAG,MAAMT,MAAM,CAACU,QAAP,CAAgBC,QAAhB,CAAyBC,QAAzB,CAAkCL,EAAlC,EAAsC;AAC1DM,IAAAA,MAAM,EAAE,CAAC,gBAAD;AADkD,GAAtC,CAAtB;AAGA,QAAMC,YAAY,GAChBC,OAAO,CAACV,GAAR,CAAYW,OAAZ,CAAoBjB,MAApB,IAA8BA,MAAM,CAACkB,KAAP,CAAaF,OAAO,CAACV,GAAR,CAAYW,OAAZ,CAAoBjB,MAAjC,CADhC,CALiC,CAQjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAO,EAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEV,IAAAA;AAAF,GAArB;AACD,CAjCD","sourcesContent":["import Stripe from \"stripe\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../../config/index\";\r\nimport * as cookie from \"cookie\";\r\n// import Cookie from \"js-cookie\";\r\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\r\n  apiVersion: \"2020-03-02\",\r\n});\r\n\r\nexport default async (req, res) => {\r\n  const { id } = req.query;\r\n  const session = await stripe.checkout.sessions.retrieve(id, {\r\n    expand: [\"payment_intent\"],\r\n  });\r\n  const parsedCookie =\r\n    context.req.headers.cookie && cookie.parse(context.req.headers.cookie);\r\n\r\n  // let user =\r\n  //   parsedCookie &&\r\n  //   parsedCookie.token &&\r\n  //   (await axios.get(`${server}/users/me`, {\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${parsedCookie.token}`,\r\n  //     },\r\n  //   }));\r\n\r\n  // const { id } = user;\r\n  // let role_id;\r\n  // const roles = await axios.get(`${server}/users-permissions/roles`);\r\n  // roles.data.roles.map((role) => {\r\n  //   role.name === \"Authenticated\" ? (role_id = role.id) : \"\";\r\n  // });\r\n\r\n  // const updatedRole = {\r\n  //   role: {\r\n  //     _id: `${role_id}`,\r\n  //     id: `${role_id}`,\r\n  //   },\r\n  // };\r\n  // axios.put(`${server}/users/${id}`, updatedRole);\r\n\r\n  res.status(200).json({ session });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}