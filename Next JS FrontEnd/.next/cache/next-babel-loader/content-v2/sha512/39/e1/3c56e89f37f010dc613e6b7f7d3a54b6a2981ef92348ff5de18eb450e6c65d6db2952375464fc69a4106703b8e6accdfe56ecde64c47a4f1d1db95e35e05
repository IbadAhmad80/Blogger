{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\posts\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nexport var __N_SSG = true;\nexport default function SinlgePost(_ref) {\n  _s();\n\n  var _this = this;\n\n  var allBlogs = _ref.allBlogs,\n      blog = _ref.blog,\n      author = _ref.author,\n      category = _ref.category;\n  var router = useRouter;\n\n  var _useState = useState({\n    blog: blog,\n    sameAuthor: author,\n    allBlogs: allBlogs,\n    sameCategory: category\n  }),\n      queryData = _useState[0],\n      setQueryData = _useState[1];\n\n  console.log(queryData, router().query.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Title of the Blog is \", queryData.blog.title, \" and its author is\", \" \", queryData.blog.author, \" and its category is \", queryData.blog.category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), queryData.allBlogs.map(function (blog) {\n      /*#__PURE__*/\n      _jsxDEV(\"h5\", {\n        children: [blog.title, \" is from \", blog.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"From same Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), queryData.sameCategoery && queryData.sameCategory.map(function (blog) {\n      /*#__PURE__*/\n      _jsxDEV(\"h5\", {\n        children: [blog.title, \" is from \", blog.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"From same Athor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), queryData.sameAuthor && queryData.sameAuthor.map(function (blog) {\n      /*#__PURE__*/\n      _jsxDEV(\"h5\", {\n        children: [blog.title, \" is from \", blog.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, _this);\n    })]\n  }, void 0, true);\n}\n\n_s(SinlgePost, \"xkaZW1C7pY4HPkeO0dKw5/ZjHWQ=\");\n\n_c = SinlgePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinlgePost\");","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/posts/[id].js"],"names":["React","useState","useRouter","SinlgePost","allBlogs","blog","author","category","router","sameAuthor","sameCategory","queryData","setQueryData","console","log","query","id","title","map","sameCategoery"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAGA,eAAe,SAASC,UAAT,OAA0D;AAAA;;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACvE,MAAMC,MAAM,GAAGN,SAAf;;AADuE,kBAErCD,QAAQ,CAAC;AACzCI,IAAAA,IAAI,EAAEA,IADmC;AAEzCI,IAAAA,UAAU,EAAEH,MAF6B;AAGzCF,IAAAA,QAAQ,EAAEA,QAH+B;AAIzCM,IAAAA,YAAY,EAAEH;AAJ2B,GAAD,CAF6B;AAAA,MAEhEI,SAFgE;AAAA,MAErDC,YAFqD;;AASvEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBH,MAAM,GAAGO,KAAT,CAAeC,EAAtC;AACA,sBACE;AAAA,4BACE;AAAA,0CACwBL,SAAS,CAACN,IAAV,CAAeY,KADvC,wBACgE,GADhE,EAEGN,SAAS,CAACN,IAAV,CAAeC,MAFlB,2BAE+CK,SAAS,CAACN,IAAV,CAAeE,QAF9D;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAOGI,SAAS,CAACP,QAAV,CAAmBc,GAAnB,CAAuB,UAACb,IAAD,EAAU;AAChC;AAAA;AAAA,mBACGA,IAAI,CAACY,KADR,eACwBZ,IAAI,CAACC,MAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD,KAJA,CAPH,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAcGK,SAAS,CAACQ,aAAV,IACCR,SAAS,CAACD,YAAV,CAAuBQ,GAAvB,CAA2B,UAACb,IAAD,EAAU;AACnC;AAAA;AAAA,mBACGA,IAAI,CAACY,KADR,eACwBZ,IAAI,CAACC,MAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD,KAJD,CAfJ,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,EAsBGK,SAAS,CAACF,UAAV,IACCE,SAAS,CAACF,UAAV,CAAqBS,GAArB,CAAyB,UAACb,IAAD,EAAU;AACjC;AAAA;AAAA,mBACGA,IAAI,CAACY,KADR,eACwBZ,IAAI,CAACC,MAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD,KAJD,CAvBJ;AAAA,kBADF;AA+BD;;GAzCuBH,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { server } from \"../../config/index\";\r\n\r\nexport default function SinlgePost({ allBlogs, blog, author, category }) {\r\n  const router = useRouter;\r\n  const [queryData, setQueryData] = useState({\r\n    blog: blog,\r\n    sameAuthor: author,\r\n    allBlogs: allBlogs,\r\n    sameCategory: category,\r\n  });\r\n\r\n  console.log(queryData, router().query.id);\r\n  return (\r\n    <>\r\n      <h5>\r\n        Title of the Blog is {queryData.blog.title} and its author is{\" \"}\r\n        {queryData.blog.author} and its category is {queryData.blog.category}\r\n      </h5>\r\n      <h1>All Blogs</h1>\r\n\r\n      {queryData.allBlogs.map((blog) => {\r\n        <h5>\r\n          {blog.title} is from {blog.author}\r\n        </h5>;\r\n      })}\r\n      <h1>From same Category</h1>\r\n\r\n      {queryData.sameCategoery &&\r\n        queryData.sameCategory.map((blog) => {\r\n          <h5>\r\n            {blog.title} is from {blog.author}\r\n          </h5>;\r\n        })}\r\n\r\n      <h1>From same Athor</h1>\r\n      {queryData.sameAuthor &&\r\n        queryData.sameAuthor.map((blog) => {\r\n          <h5>\r\n            {blog.title} is from {blog.author}\r\n          </h5>;\r\n        })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const res = await fetch(`${server}/posts/`);\r\n  const allBlogs = await res.json();\r\n  let blog = allBlogs.filter((blog) => blog.id === context.params.id);\r\n  let author = allBlogs.filter((article) => article.author === blog.author);\r\n  console.log(\"blog is \", blog[0].categories[0].name);\r\n  let category = allBlogs.filter(\r\n    (article) => article.categories[0].name === blog[0].categories[0].name\r\n  );\r\n\r\n  return {\r\n    revalidate: 5,\r\n    props: {\r\n      allBlogs,\r\n      blog,\r\n      author,\r\n      category,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const res = await fetch(`${server}/posts/`);\r\n  const allBlogs = await res.json();\r\n  const ids = allBlogs.map((blog) => blog.id);\r\n  const paths = ids.map((id) => ({\r\n    params: {\r\n      id: id.toString(),\r\n    },\r\n  }));\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}