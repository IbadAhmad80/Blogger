{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\create_post.js\";\nimport React from \"react\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { server } from \"../config/index\";\nexport default function CreatePost({\n  user\n}) {\n  console.log(\"role is\", role);\n  console.log(\"user id\", id);\n\n  const becomeAuthorize = async () => {\n    let role_id;\n    const roles = await axios.get(`${server}/users-permissions/roles`);\n    roles.map(role => {\n      role.name === \"Authenticated\";\n      role_id = role.id;\n    });\n    axios.put(`${server}/users/${user}`, {\n      role: {\n        _id: `${role_id}`,\n        id: `${role_id}`\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), role && role.name === \"Public\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: becomeAuthorize,\n      children: \"Become Authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"You are already authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\nexport const getServerSideProps = async () => {\n  console.log(\"hi, in getserversideprops\"); // let id, role;\n\n  let user;\n\n  if (Cookie.get(\"token\")) {\n    user = await axios.get(`${server}/users/me`, {\n      headers: {\n        Authorization: `Bearer ${Cookie.get(\"token\")}`\n      }\n    }); // id = user.id;\n    // role = user.role;\n  }\n\n  return {\n    props: {\n      user\n    }\n  };\n};","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/create_post.js"],"names":["React","Cookie","axios","server","CreatePost","user","console","log","role","id","becomeAuthorize","role_id","roles","get","map","name","put","_id","getServerSideProps","headers","Authorization","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA8B;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,IAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,EAAvB;;AACA,QAAMC,eAAe,GAAG,YAAY;AAClC,QAAIC,OAAJ;AACA,UAAMC,KAAK,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEV,MAAO,0BAApB,CAApB;AACAS,IAAAA,KAAK,CAACE,GAAN,CAAWN,IAAD,IAAU;AAClBA,MAAAA,IAAI,CAACO,IAAL,KAAc,eAAd;AACAJ,MAAAA,OAAO,GAAGH,IAAI,CAACC,EAAf;AACD,KAHD;AAIAP,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEb,MAAO,UAASE,IAAK,EAAlC,EAAqC;AACnCG,MAAAA,IAAI,EAAE;AACJS,QAAAA,GAAG,EAAG,GAAEN,OAAQ,EADZ;AAEJF,QAAAA,EAAE,EAAG,GAAEE,OAAQ;AAFX;AAD6B,KAArC;AAMD,GAbD;;AAcA,sBACE;AAAA,4BACE;AAAA,gBACGV,MAAM,CAACY,GAAP,CAAW,OAAX,IAAsB,2BAAtB,GAAoD;AADvD;AAAA;AAAA;AAAA;AAAA,YADF,EAIGL,IAAI,IAAIA,IAAI,CAACO,IAAL,KAAc,QAAtB,gBACC;AAAQ,MAAA,OAAO,EAAEL,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAYD;AAED,OAAO,MAAMQ,kBAAkB,GAAG,YAAY;AAC5CZ,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAD4C,CAE5C;;AACA,MAAIF,IAAJ;;AACA,MAAIJ,MAAM,CAACY,GAAP,CAAW,OAAX,CAAJ,EAAyB;AACvBR,IAAAA,IAAI,GAAG,MAAMH,KAAK,CAACW,GAAN,CAAW,GAAEV,MAAO,WAApB,EAAgC;AAC3CgB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASnB,MAAM,CAACY,GAAP,CAAW,OAAX,CAAoB;AADtC;AADkC,KAAhC,CAAb,CADuB,CAMvB;AACA;AACD;;AACD,SAAO;AACLQ,IAAAA,KAAK,EAAE;AACLhB,MAAAA;AADK;AADF,GAAP;AAKD,CAlBM","sourcesContent":["import React from \"react\";\r\nimport Cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../config/index\";\r\n\r\nexport default function CreatePost({ user }) {\r\n  console.log(\"role is\", role);\r\n  console.log(\"user id\", id);\r\n  const becomeAuthorize = async () => {\r\n    let role_id;\r\n    const roles = await axios.get(`${server}/users-permissions/roles`);\r\n    roles.map((role) => {\r\n      role.name === \"Authenticated\";\r\n      role_id = role.id;\r\n    });\r\n    axios.put(`${server}/users/${user}`, {\r\n      role: {\r\n        _id: `${role_id}`,\r\n        id: `${role_id}`,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        {Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"}\r\n      </div>\r\n      {role && role.name === \"Public\" ? (\r\n        <button onClick={becomeAuthorize}>Become Authorize</button>\r\n      ) : (\r\n        <h5>You are already authorize</h5>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = async () => {\r\n  console.log(\"hi, in getserversideprops\");\r\n  // let id, role;\r\n  let user;\r\n  if (Cookie.get(\"token\")) {\r\n    user = await axios.get(`${server}/users/me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookie.get(\"token\")}`,\r\n      },\r\n    });\r\n    // id = user.id;\r\n    // role = user.role;\r\n  }\r\n  return {\r\n    props: {\r\n      user,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}