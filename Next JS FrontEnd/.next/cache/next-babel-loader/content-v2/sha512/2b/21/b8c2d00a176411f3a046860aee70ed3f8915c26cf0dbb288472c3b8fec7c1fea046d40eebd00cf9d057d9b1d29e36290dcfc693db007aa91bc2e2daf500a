{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\posts\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { server } from \"../../config/index\";\nexport default function SinlgePost(_ref) {\n  _s();\n\n  var allBlogs = _ref.allBlogs,\n      blog = _ref.blog,\n      author = _ref.author;\n  var router = useRouter;\n  var id = router().query.id; // const router = useRouter;\n\n  var _useState = useState({\n    blog: blog,\n    sameAuthor: author,\n    allBlogs: allBlogs\n  }),\n      queryData = _useState[0],\n      setQueryData = _useState[1];\n\n  console.log(queryData, router().query.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n} // export const getStaticProps = async () => {\n//   // const router = useRouter();\n//   // console.log(\"in server side\", router);\n//   const res = await fetch(`${server}/posts/`);\n//   const allBlogs = await res.json();\n//   let blog = allBlogs.filter((blog) => blog.id === router().query.id);\n//   let author = allBlogs.filter((article) => article.author === blog.author);\n//   return {\n//     revalidate: 5,\n//     props: {\n//       allBlogs,\n//       blog,\n//       author,\n//     },\n//   };\n// };\n// export const getStaticPaths = async (context) => {\n//   const res = await fetch(`${server}/posts/`);\n//   // console.log(\"id is\", id);\n//   console.log(\"context is\", context.params);\n//   const allBlogs = await res.json();\n//   const ids = allBlogs.map((blog) => blog.id);\n//   const paths = ids.map((id) => {\n//     params: {\n//       id: id.toString();\n//     }\n//   });\n//   return {\n//     paths,\n//     fallback: false,\n//   };\n// };\n\n_s(SinlgePost, \"1mlvQdtb4z7y98awP+jWsQtdT9k=\");\n\n_c = SinlgePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinlgePost\");","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/posts/[id].js"],"names":["React","useState","useRouter","server","SinlgePost","allBlogs","blog","author","router","id","query","sameAuthor","queryData","setQueryData","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,eAAe,SAASC,UAAT,OAAgD;AAAA;;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC7D,MAAMC,MAAM,GAAGN,SAAf;AACA,MAAMO,EAAE,GAAGD,MAAM,GAAGE,KAAT,CAAeD,EAA1B,CAF6D,CAG7D;;AAH6D,kBAI3BR,QAAQ,CAAC;AACzCK,IAAAA,IAAI,EAAEA,IADmC;AAEzCK,IAAAA,UAAU,EAAEJ,MAF6B;AAGzCF,IAAAA,QAAQ,EAAEA;AAH+B,GAAD,CAJmB;AAAA,MAItDO,SAJsD;AAAA,MAI3CC,YAJ2C;;AAU7DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBJ,MAAM,GAAGE,KAAT,CAAeD,EAAtC;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAhDwBL,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { server } from \"../../config/index\";\r\n\r\nexport default function SinlgePost({ allBlogs, blog, author }) {\r\n  const router = useRouter;\r\n  const id = router().query.id;\r\n  // const router = useRouter;\r\n  const [queryData, setQueryData] = useState({\r\n    blog: blog,\r\n    sameAuthor: author,\r\n    allBlogs: allBlogs,\r\n  });\r\n\r\n  console.log(queryData, router().query.id);\r\n  return <div></div>;\r\n}\r\n\r\n// export const getStaticProps = async () => {\r\n//   // const router = useRouter();\r\n//   // console.log(\"in server side\", router);\r\n//   const res = await fetch(`${server}/posts/`);\r\n//   const allBlogs = await res.json();\r\n//   let blog = allBlogs.filter((blog) => blog.id === router().query.id);\r\n//   let author = allBlogs.filter((article) => article.author === blog.author);\r\n\r\n//   return {\r\n//     revalidate: 5,\r\n//     props: {\r\n//       allBlogs,\r\n//       blog,\r\n//       author,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export const getStaticPaths = async (context) => {\r\n//   const res = await fetch(`${server}/posts/`);\r\n//   // console.log(\"id is\", id);\r\n//   console.log(\"context is\", context.params);\r\n\r\n//   const allBlogs = await res.json();\r\n//   const ids = allBlogs.map((blog) => blog.id);\r\n//   const paths = ids.map((id) => {\r\n//     params: {\r\n//       id: id.toString();\r\n//     }\r\n//   });\r\n//   return {\r\n//     paths,\r\n//     fallback: false,\r\n//   };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}