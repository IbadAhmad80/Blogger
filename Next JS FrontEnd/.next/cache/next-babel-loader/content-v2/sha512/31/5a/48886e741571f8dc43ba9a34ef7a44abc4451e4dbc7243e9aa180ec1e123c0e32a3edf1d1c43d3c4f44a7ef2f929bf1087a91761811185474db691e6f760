{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\create_post.js\";\nimport React from \"react\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { server } from \"../config/index\";\nexport var __N_SSP = true;\nexport default function CreatePost(_ref) {\n  var user = _ref.user;\n  var id = user.id,\n      role = user.role;\n\n  var becomeAuthorize = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var role_id, roles, updatedRole;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(server, \"/users-permissions/roles\"));\n\n            case 2:\n              roles = _context.sent;\n              roles.data.roles.map(function (role) {\n                role.name === \"Authenticated\" ? role_id = role.id : \"\";\n              });\n              updatedRole = {\n                role: {\n                  _id: \"\".concat(role_id),\n                  id: \"\".concat(role_id)\n                }\n              };\n              axios.put(\"\".concat(server, \"/users/\").concat(id), updatedRole);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function becomeAuthorize() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), role ? role.name === \"Public\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: becomeAuthorize,\n      children: \"Become Authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"You are already authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this) : \"\"]\n  }, void 0, true);\n}\n_c = CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/create_post.js"],"names":["React","Cookie","axios","server","CreatePost","user","id","role","becomeAuthorize","get","roles","data","map","name","role_id","updatedRole","_id","put"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAGA,eAAe,SAASC,UAAT,OAA8B;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAAA,MACnCC,EADmC,GACtBD,IADsB,CACnCC,EADmC;AAAA,MAC/BC,IAD+B,GACtBF,IADsB,CAC/BE,IAD+B;;AAE3C,MAAMC,eAAe;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEFN,KAAK,CAACO,GAAN,WAAaN,MAAb,8BAFE;;AAAA;AAEhBO,cAAAA,KAFgB;AAGtBA,cAAAA,KAAK,CAACC,IAAN,CAAWD,KAAX,CAAiBE,GAAjB,CAAqB,UAACL,IAAD,EAAU;AAC7BA,gBAAAA,IAAI,CAACM,IAAL,KAAc,eAAd,GAAiCC,OAAO,GAAGP,IAAI,CAACD,EAAhD,GAAsD,EAAtD;AACD,eAFD;AAIMS,cAAAA,WAPgB,GAOF;AAClBR,gBAAAA,IAAI,EAAE;AACJS,kBAAAA,GAAG,YAAKF,OAAL,CADC;AAEJR,kBAAAA,EAAE,YAAKQ,OAAL;AAFE;AADY,eAPE;AAatBZ,cAAAA,KAAK,CAACe,GAAN,WAAad,MAAb,oBAA6BG,EAA7B,GAAmCS,WAAnC;;AAbsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfP,eAAe;AAAA;AAAA;AAAA,KAArB;;AAeA,sBACE;AAAA,4BACE;AAAA,gBACGP,MAAM,CAACQ,GAAP,CAAW,OAAX,IAAsB,2BAAtB,GAAoD;AADvD;AAAA;AAAA;AAAA;AAAA,YADF,EAIGF,IAAI,GACHA,IAAI,CAACM,IAAL,KAAc,QAAd,gBACE;AAAQ,MAAA,OAAO,EAAEL,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJC,GAOH,EAXJ;AAAA,kBADF;AAgBD;KAjCuBJ,U","sourcesContent":["import React from \"react\";\r\nimport Cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../config/index\";\r\nimport * as cookie from \"cookie\";\r\n\r\nexport default function CreatePost({ user }) {\r\n  const { id, role } = user;\r\n  const becomeAuthorize = async () => {\r\n    let role_id;\r\n    const roles = await axios.get(`${server}/users-permissions/roles`);\r\n    roles.data.roles.map((role) => {\r\n      role.name === \"Authenticated\" ? (role_id = role.id) : \"\";\r\n    });\r\n\r\n    const updatedRole = {\r\n      role: {\r\n        _id: `${role_id}`,\r\n        id: `${role_id}`,\r\n      },\r\n    };\r\n    axios.put(`${server}/users/${id}`, updatedRole);\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        {Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"}\r\n      </div>\r\n      {role ? (\r\n        role.name === \"Public\" ? (\r\n          <button onClick={becomeAuthorize}>Become Authorize</button>\r\n        ) : (\r\n          <h5>You are already authorize</h5>\r\n        )\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = async (context) => {\r\n  const parsedCookie =\r\n    context.req.headers.cookie && cookie.parse(context.req.headers.cookie);\r\n\r\n  let user =\r\n    parsedCookie &&\r\n    parsedCookie.token &&\r\n    (await axios.get(`${server}/users/me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${parsedCookie.token}`,\r\n      },\r\n    }));\r\n  return {\r\n    props: {\r\n      user: parsedCookie ? user.data : \"\",\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}