{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\components\\\\ContactPage\\\\Map.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nexport default function Map({\n  locations\n}) {\n  // console.log(process.env.NEXT_PUBLIC_MPBOX_SECRET_KEY);\n  const {\n    0: viewport,\n    1: setViewport\n  } = useState({\n    width: \"87%\",\n    height: \"100%\",\n    // The latitude and longitude of the center of London\n    // latitude: 51.5074,\n    // longitude: -0.1278,\n    latitude: 31.582045,\n    longitude: 74.329376,\n    zoom: 10\n  });\n  const {\n    0: selectLocation,\n    1: setSelectedLocation\n  } = useState({});\n  return /*#__PURE__*/_jsxDEV(ReactMapGL, _objectSpread(_objectSpread({\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    mapboxApiAccessToken: process.env.NEXT_PUBLIC_MPBOX_SECRET_KEY\n  }, viewport), {}, {\n    onViewportChange: nextViewport => setViewport(nextViewport),\n    children: locations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        latitude: location.center[1],\n        longitude: location.center[0],\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => {\n            setSelectedLocation(location);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"push-pin\",\n            children: \"\\uD83D\\uDCCC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), selectLocation.id === location.id ? /*#__PURE__*/_jsxDEV(Popup, {\n        onClose: () => setSelectedLocation({}),\n        closeOnClick: true,\n        latitude: location.center[1],\n        longitude: location.center[0],\n        children: location.place_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this) : false]\n    }, location.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n} // import React, { useState, useEffect } from \"react\";\n// import { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n// import Styles from \"../../styles/Contact.module.scss\";\n// const mapStyles = {\n//   width: \"80%\",\n//   height: \"100%\",\n// };\n// function GoogleMap() {\n//   const [userLocation, setLocation] = useState({\n//     longituide: \"\",\n//     latituide: \"\",\n//   });\n//   useEffect(() => {\n//     if (navigator.geolocation) {\n//       navigator.geolocation.watchPosition(function (position) {\n//         console.log(\"Latitude is :\", position.coords.latitude);\n//         console.log(\"Longitude is :\", position.coords.longitude);\n//         setLocation({\n//           longituide: position.coords.longitude,\n//           latituide: position.coords.latituide,\n//         });\n//       });\n//     }\n//   }, []);\n//   return (\n//     <div>\n//       <div>\n//         <Map\n//           google={google}\n//           zoom={14}\n//           style={mapStyles}\n//           initialCenter={{\n//             lat: userLocation.latituide,\n//             lng: userLocation.longitude,\n//           }}\n//         >\n//           <Marker name={\"This is test name\"} />\n//         </Map>\n//       </div>\n//     </div>\n//   );\n// }\n// export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyDOTuZWLNaP930IeXGDMRghAoDpBBnddY8\",\n// })(GoogleMap);","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/components/ContactPage/Map.js"],"names":["useState","ReactMapGL","Marker","Popup","Map","locations","viewport","setViewport","width","height","latitude","longitude","zoom","selectLocation","setSelectedLocation","process","env","NEXT_PUBLIC_MPBOX_SECRET_KEY","nextViewport","map","location","center","id","place_name"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,KAA7B,QAA0C,cAA1C;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAA4B;AACzC;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,MAAM,EAAE,MAF+B;AAGvC;AACA;AACA;AACAC,IAAAA,QAAQ,EAAE,SAN6B;AAOvCC,IAAAA,SAAS,EAAE,SAP4B;AAQvCC,IAAAA,IAAI,EAAE;AARiC,GAAD,CAAxC;AAUA,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAwCd,QAAQ,CAAC,EAAD,CAAtD;AAEA,sBACE,QAAC,UAAD;AACE,IAAA,QAAQ,EAAC,oCADX;AAEE,IAAA,oBAAoB,EAAEe,OAAO,CAACC,GAAR,CAAYC;AAFpC,KAGMX,QAHN;AAIE,IAAA,gBAAgB,EAAGY,YAAD,IAAkBX,WAAW,CAACW,YAAD,CAJjD;AAAA,cAMGb,SAAS,CAACc,GAAV,CAAeC,QAAD,iBACb;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEA,QAAQ,CAACC,MAAT,CAAgB,CAAhB,CAAlB;AAAsC,QAAA,SAAS,EAAED,QAAQ,CAACC,MAAT,CAAgB,CAAhB,CAAjD;AAAA,+BACE;AACE,UAAA,OAAO,EAAE,MAAM;AACbP,YAAAA,mBAAmB,CAACM,QAAD,CAAnB;AACD,WAHH;AAAA,iCAKE;AAAM,YAAA,IAAI,EAAC,KAAX;AAAiB,0BAAW,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAYGP,cAAc,CAACS,EAAf,KAAsBF,QAAQ,CAACE,EAA/B,gBACC,QAAC,KAAD;AACE,QAAA,OAAO,EAAE,MAAMR,mBAAmB,CAAC,EAAD,CADpC;AAEE,QAAA,YAAY,EAAE,IAFhB;AAGE,QAAA,QAAQ,EAAEM,QAAQ,CAACC,MAAT,CAAgB,CAAhB,CAHZ;AAIE,QAAA,SAAS,EAAED,QAAQ,CAACC,MAAT,CAAgB,CAAhB,CAJb;AAAA,kBAMGD,QAAQ,CAACG;AANZ;AAAA;AAAA;AAAA;AAAA,cADD,GAUC,KAtBJ;AAAA,OAAUH,QAAQ,CAACE,EAAnB;AAAA;AAAA;AAAA;AAAA,YADD;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useState } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\n\r\nexport default function Map({ locations }) {\r\n  // console.log(process.env.NEXT_PUBLIC_MPBOX_SECRET_KEY);\r\n  const [viewport, setViewport] = useState({\r\n    width: \"87%\",\r\n    height: \"100%\",\r\n    // The latitude and longitude of the center of London\r\n    // latitude: 51.5074,\r\n    // longitude: -0.1278,\r\n    latitude: 31.582045,\r\n    longitude: 74.329376,\r\n    zoom: 10,\r\n  });\r\n  const [selectLocation, setSelectedLocation] = useState({});\r\n\r\n  return (\r\n    <ReactMapGL\r\n      mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n      mapboxApiAccessToken={process.env.NEXT_PUBLIC_MPBOX_SECRET_KEY}\r\n      {...viewport}\r\n      onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n    >\r\n      {locations.map((location) => (\r\n        <div key={location.id}>\r\n          <Marker latitude={location.center[1]} longitude={location.center[0]}>\r\n            <a\r\n              onClick={() => {\r\n                setSelectedLocation(location);\r\n              }}\r\n            >\r\n              <span role=\"img\" aria-label=\"push-pin\">\r\n                ðŸ“Œ\r\n              </span>\r\n            </a>\r\n          </Marker>\r\n          {selectLocation.id === location.id ? (\r\n            <Popup\r\n              onClose={() => setSelectedLocation({})}\r\n              closeOnClick={true}\r\n              latitude={location.center[1]}\r\n              longitude={location.center[0]}\r\n            >\r\n              {location.place_name}\r\n            </Popup>\r\n          ) : (\r\n            false\r\n          )}\r\n        </div>\r\n      ))}\r\n    </ReactMapGL>\r\n  );\r\n}\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\n// import Styles from \"../../styles/Contact.module.scss\";\r\n\r\n// const mapStyles = {\r\n//   width: \"80%\",\r\n//   height: \"100%\",\r\n// };\r\n\r\n// function GoogleMap() {\r\n//   const [userLocation, setLocation] = useState({\r\n//     longituide: \"\",\r\n//     latituide: \"\",\r\n//   });\r\n//   useEffect(() => {\r\n//     if (navigator.geolocation) {\r\n//       navigator.geolocation.watchPosition(function (position) {\r\n//         console.log(\"Latitude is :\", position.coords.latitude);\r\n//         console.log(\"Longitude is :\", position.coords.longitude);\r\n//         setLocation({\r\n//           longituide: position.coords.longitude,\r\n//           latituide: position.coords.latituide,\r\n//         });\r\n//       });\r\n//     }\r\n//   }, []);\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Map\r\n//           google={google}\r\n//           zoom={14}\r\n//           style={mapStyles}\r\n//           initialCenter={{\r\n//             lat: userLocation.latituide,\r\n//             lng: userLocation.longitude,\r\n//           }}\r\n//         >\r\n//           <Marker name={\"This is test name\"} />\r\n//         </Map>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default GoogleApiWrapper({\r\n//   apiKey: \"AIzaSyDOTuZWLNaP930IeXGDMRghAoDpBBnddY8\",\r\n// })(GoogleMap);\r\n"]},"metadata":{},"sourceType":"module"}