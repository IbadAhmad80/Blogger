{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\create_post.js\";\nimport React from \"react\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nimport { server } from \"../config/index\";\nexport default function CreatePost({\n  userId,\n  role\n}) {\n  let role_id;\n  console.log(\"role is\", role);\n\n  const becomeAuthorize = async () => {\n    const roles = await axios.get(`${server}/users-permissions/roles`);\n    roles.map(role => {\n      role.name === \"Authenticated\";\n      role_id = role.id;\n    });\n    axios.put(`${server}/users/${userId}`, {\n      role: {\n        _id: `${role_id}`,\n        id: `${role_id}`\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), role && role.name === \"Public\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: becomeAuthorize,\n      children: \"Become Authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"You are already authorize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\nexport const getServerSideProps = async () => {\n  if (Cookie.get(\"token\")) {\n    let user = await axios.get(`${server}/users/me`, {\n      headers: {\n        Authorization: `Bearer ${Cookie.get(\"token\")}`\n      }\n    });\n    return {\n      props: {\n        userId: user.id,\n        role: user.role\n      }\n    };\n  }\n};","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/create_post.js"],"names":["React","Cookie","axios","server","CreatePost","userId","role","role_id","console","log","becomeAuthorize","roles","get","map","name","id","put","_id","getServerSideProps","user","headers","Authorization","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAApB,EAAsC;AACnD,MAAIC,OAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;;AACA,QAAMI,eAAe,GAAG,YAAY;AAClC,UAAMC,KAAK,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAET,MAAO,0BAApB,CAApB;AACAQ,IAAAA,KAAK,CAACE,GAAN,CAAWP,IAAD,IAAU;AAClBA,MAAAA,IAAI,CAACQ,IAAL,KAAc,eAAd;AACAP,MAAAA,OAAO,GAAGD,IAAI,CAACS,EAAf;AACD,KAHD;AAIAb,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEb,MAAO,UAASE,MAAO,EAApC,EAAuC;AACrCC,MAAAA,IAAI,EAAE;AACJW,QAAAA,GAAG,EAAG,GAAEV,OAAQ,EADZ;AAGJQ,QAAAA,EAAE,EAAG,GAAER,OAAQ;AAHX;AAD+B,KAAvC;AAOD,GAbD;;AAcA,sBACE;AAAA,4BACE;AAAA,gBACGN,MAAM,CAACW,GAAP,CAAW,OAAX,IAAsB,2BAAtB,GAAoD;AADvD;AAAA;AAAA;AAAA;AAAA,YADF,EAIGN,IAAI,IAAIA,IAAI,CAACQ,IAAL,KAAc,QAAtB,gBACC;AAAQ,MAAA,OAAO,EAAEJ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAYD;AAED,OAAO,MAAMQ,kBAAkB,GAAG,YAAY;AAC5C,MAAIjB,MAAM,CAACW,GAAP,CAAW,OAAX,CAAJ,EAAyB;AACvB,QAAIO,IAAI,GAAG,MAAMjB,KAAK,CAACU,GAAN,CAAW,GAAET,MAAO,WAApB,EAAgC;AAC/CiB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASpB,MAAM,CAACW,GAAP,CAAW,OAAX,CAAoB;AADtC;AADsC,KAAhC,CAAjB;AAMA,WAAO;AACLU,MAAAA,KAAK,EAAE;AACLjB,QAAAA,MAAM,EAAEc,IAAI,CAACJ,EADR;AAELT,QAAAA,IAAI,EAAEa,IAAI,CAACb;AAFN;AADF,KAAP;AAMD;AACF,CAfM","sourcesContent":["import React from \"react\";\r\nimport Cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../config/index\";\r\n\r\nexport default function CreatePost({ userId, role }) {\r\n  let role_id;\r\n  console.log(\"role is\", role);\r\n  const becomeAuthorize = async () => {\r\n    const roles = await axios.get(`${server}/users-permissions/roles`);\r\n    roles.map((role) => {\r\n      role.name === \"Authenticated\";\r\n      role_id = role.id;\r\n    });\r\n    axios.put(`${server}/users/${userId}`, {\r\n      role: {\r\n        _id: `${role_id}`,\r\n\r\n        id: `${role_id}`,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        {Cookie.get(\"token\") ? \"You are already signed in\" : \"Sign in First\"}\r\n      </div>\r\n      {role && role.name === \"Public\" ? (\r\n        <button onClick={becomeAuthorize}>Become Authorize</button>\r\n      ) : (\r\n        <h5>You are already authorize</h5>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = async () => {\r\n  if (Cookie.get(\"token\")) {\r\n    let user = await axios.get(`${server}/users/me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${Cookie.get(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    return {\r\n      props: {\r\n        userId: user.id,\r\n        role: user.role,\r\n      },\r\n    };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}