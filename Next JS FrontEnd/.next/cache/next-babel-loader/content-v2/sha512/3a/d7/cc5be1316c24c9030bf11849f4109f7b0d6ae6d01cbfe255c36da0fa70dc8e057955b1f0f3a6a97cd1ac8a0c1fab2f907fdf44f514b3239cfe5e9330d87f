{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni Work\\\\Semester 6\\\\Web Development\\\\blogging-website\\\\next-frontend\\\\blogging-app\\\\pages\\\\result.js\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\nimport axios from \"axios\";\nimport { server } from \"../config/index\";\nimport * as cookie from \"cookie\";\nexport default function Result({\n  user\n}) {\n  const router = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(router.query.session_id ? `/api/checkout/${router.query.session_id}` : null, url => fetch(url).then(res => res.json()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: data ? JSON.stringify(data, null, 2) : \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  const parsedCookie = context.req.headers.cookie && cookie.parse(context.req.headers.cookie);\n  let user = parsedCookie && parsedCookie.token && (await axios.get(`${server}/users/me`, {\n    headers: {\n      Authorization: `Bearer ${parsedCookie.token}`\n    }\n  }));\n  let {\n    id\n  } = user;\n  let role_id;\n  const roles = await axios.get(`${server}/users-permissions/roles`);\n  roles.data.roles.map(role => {\n    role.name === \"Authenticated\" ? role_id = role.id : \"\";\n  });\n  const updatedRole = {\n    role: {\n      _id: `${role_id}`,\n      id: `${role_id}`\n    }\n  };\n  user && (await axios.put(`${server}/users/${id}`, updatedRole)); // console.log(\"roles are\", roles);\n\n  return {\n    props: {\n      user: parsedCookie ? user.data : \"\"\n    }\n  };\n};","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/result.js"],"names":["useRouter","useSWR","axios","server","cookie","Result","user","router","data","error","query","session_id","url","fetch","then","res","json","JSON","stringify","getServerSideProps","context","parsedCookie","req","headers","parse","token","get","Authorization","id","role_id","roles","map","role","name","updatedRole","_id","put","props"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA0B;AACvC,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBR,MAAM,CAC5BM,MAAM,CAACG,KAAP,CAAaC,UAAb,GAA2B,iBAAgBJ,MAAM,CAACG,KAAP,CAAaC,UAAW,EAAnE,GAAuE,IAD3C,EAE3BC,GAAD,IAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,CAFmB,CAA9B;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMR,IAAI,GAAGS,IAAI,CAACC,SAAL,CAAeV,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAH,GAAmC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAED,OAAO,MAAMW,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AACnD,QAAMC,YAAY,GAChBD,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBnB,MAApB,IAA8BA,MAAM,CAACoB,KAAP,CAAaJ,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBnB,MAAjC,CADhC;AAGA,MAAIE,IAAI,GACNe,YAAY,IACZA,YAAY,CAACI,KADb,KAEC,MAAMvB,KAAK,CAACwB,GAAN,CAAW,GAAEvB,MAAO,WAApB,EAAgC;AACrCoB,IAAAA,OAAO,EAAE;AACPI,MAAAA,aAAa,EAAG,UAASN,YAAY,CAACI,KAAM;AADrC;AAD4B,GAAhC,CAFP,CADF;AAQA,MAAI;AAAEG,IAAAA;AAAF,MAAStB,IAAb;AACA,MAAIuB,OAAJ;AACA,QAAMC,KAAK,GAAG,MAAM5B,KAAK,CAACwB,GAAN,CAAW,GAAEvB,MAAO,0BAApB,CAApB;AACA2B,EAAAA,KAAK,CAACtB,IAAN,CAAWsB,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AAC7BA,IAAAA,IAAI,CAACC,IAAL,KAAc,eAAd,GAAiCJ,OAAO,GAAGG,IAAI,CAACJ,EAAhD,GAAsD,EAAtD;AACD,GAFD;AAIA,QAAMM,WAAW,GAAG;AAClBF,IAAAA,IAAI,EAAE;AACJG,MAAAA,GAAG,EAAG,GAAEN,OAAQ,EADZ;AAEJD,MAAAA,EAAE,EAAG,GAAEC,OAAQ;AAFX;AADY,GAApB;AAMAvB,EAAAA,IAAI,KAAK,MAAMJ,KAAK,CAACkC,GAAN,CAAW,GAAEjC,MAAO,UAASyB,EAAG,EAAhC,EAAmCM,WAAnC,CAAX,CAAJ,CAzBmD,CA0BnD;;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACL/B,MAAAA,IAAI,EAAEe,YAAY,GAAGf,IAAI,CAACE,IAAR,GAAe;AAD5B;AADF,GAAP;AAKD,CAjCM","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../config/index\";\r\nimport * as cookie from \"cookie\";\r\nexport default function Result({ user }) {\r\n  const router = useRouter();\r\n\r\n  const { data, error } = useSWR(\r\n    router.query.session_id ? `/api/checkout/${router.query.session_id}` : null,\r\n    (url) => fetch(url).then((res) => res.json())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Payment Result</h1>\r\n      <pre>{data ? JSON.stringify(data, null, 2) : \"Loading...\"}</pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = async (context) => {\r\n  const parsedCookie =\r\n    context.req.headers.cookie && cookie.parse(context.req.headers.cookie);\r\n\r\n  let user =\r\n    parsedCookie &&\r\n    parsedCookie.token &&\r\n    (await axios.get(`${server}/users/me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${parsedCookie.token}`,\r\n      },\r\n    }));\r\n  let { id } = user;\r\n  let role_id;\r\n  const roles = await axios.get(`${server}/users-permissions/roles`);\r\n  roles.data.roles.map((role) => {\r\n    role.name === \"Authenticated\" ? (role_id = role.id) : \"\";\r\n  });\r\n\r\n  const updatedRole = {\r\n    role: {\r\n      _id: `${role_id}`,\r\n      id: `${role_id}`,\r\n    },\r\n  };\r\n  user && (await axios.put(`${server}/users/${id}`, updatedRole));\r\n  // console.log(\"roles are\", roles);\r\n\r\n  return {\r\n    props: {\r\n      user: parsedCookie ? user.data : \"\",\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}