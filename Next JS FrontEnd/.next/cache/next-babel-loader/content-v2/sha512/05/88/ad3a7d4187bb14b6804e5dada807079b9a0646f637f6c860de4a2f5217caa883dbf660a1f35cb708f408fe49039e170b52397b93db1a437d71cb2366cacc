{"ast":null,"code":"import Stripe from \"stripe\";\nimport axios from \"axios\";\nimport { server } from \"../../../config/index\";\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  apiVersion: \"2020-03-02\"\n});\nexport default (async (req, res) => {\n  const {\n    quantity,\n    user\n  } = req.body;\n  const session = await stripe.checkout.sessions.create({\n    payment_method_types: [\"card\"],\n    line_items: [{\n      price: process.env.PRICE_ID,\n      quantity\n    }],\n    mode: \"payment\",\n    success_url: `${req.headers.origin}/result?session_id={CHECKOUT_SESSION_ID}`,\n    cancel_url: `${req.headers.origin}/create_post`\n  });\n  res.status(200).json({\n    sessionId: session.id\n  });\n});","map":{"version":3,"sources":["D:/Uni Work/Semester 6/Web Development/blogging-website/next-frontend/blogging-app/pages/api/checkout/sessions.js"],"names":["Stripe","axios","server","stripe","process","env","STRIPE_SECRET_KEY","apiVersion","req","res","quantity","user","body","session","checkout","sessions","create","payment_method_types","line_items","price","PRICE_ID","mode","success_url","headers","origin","cancel_url","status","json","sessionId","id"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,MAAMC,MAAM,GAAG,IAAIH,MAAJ,CAAWI,OAAO,CAACC,GAAR,CAAYC,iBAAvB,EAA0C;AACvDC,EAAAA,UAAU,EAAE;AAD2C,CAA1C,CAAf;AAIA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBH,GAAG,CAACI,IAA/B;AACA,QAAMC,OAAO,GAAG,MAAMV,MAAM,CAACW,QAAP,CAAgBC,QAAhB,CAAyBC,MAAzB,CAAgC;AACpDC,IAAAA,oBAAoB,EAAE,CAAC,MAAD,CAD8B;AAEpDC,IAAAA,UAAU,EAAE,CACV;AACEC,MAAAA,KAAK,EAAEf,OAAO,CAACC,GAAR,CAAYe,QADrB;AAEEV,MAAAA;AAFF,KADU,CAFwC;AAQpDW,IAAAA,IAAI,EAAE,SAR8C;AASpDC,IAAAA,WAAW,EAAG,GAAEd,GAAG,CAACe,OAAJ,CAAYC,MAAO,0CATiB;AAUpDC,IAAAA,UAAU,EAAG,GAAEjB,GAAG,CAACe,OAAJ,CAAYC,MAAO;AAVkB,GAAhC,CAAtB;AAaAf,EAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,SAAS,EAAEf,OAAO,CAACgB;AAArB,GAArB;AACD,CAhBD","sourcesContent":["import Stripe from \"stripe\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../../config/index\";\r\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\r\n  apiVersion: \"2020-03-02\",\r\n});\r\n\r\nexport default async (req, res) => {\r\n  const { quantity, user } = req.body;\r\n  const session = await stripe.checkout.sessions.create({\r\n    payment_method_types: [\"card\"],\r\n    line_items: [\r\n      {\r\n        price: process.env.PRICE_ID,\r\n        quantity,\r\n      },\r\n    ],\r\n    mode: \"payment\",\r\n    success_url: `${req.headers.origin}/result?session_id={CHECKOUT_SESSION_ID}`,\r\n    cancel_url: `${req.headers.origin}/create_post`,\r\n  });\r\n\r\n  res.status(200).json({ sessionId: session.id });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}